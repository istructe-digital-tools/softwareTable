name: Deploy static content to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  update-software-list:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Generate software list in JavaScript
        run: node .github/scripts/updateSoftwareList.js

      - name: Commit and push updated software list
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Auto-update software list" || echo "No changes to commit"
          git push

  deploy:
    needs: update-software-list
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact (required for GitHub Pages)
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'  # Upload everything

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Delete old artifacts
        run: |
          GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          RUN_ID=${{ github.run_id }}
          REPO=${{ github.repository }}
          echo "Deleting artifacts for run $RUN_ID in $REPO..."
          ARTIFACTS=$(gh api repos/$REPO/actions/runs/$RUN_ID/artifacts --jq '.artifacts[].id')
          for ARTIFACT_ID in $ARTIFACTS; do
            gh api --method DELETE repos/$REPO/actions/artifacts/$ARTIFACT_ID
            echo "Deleted artifact $ARTIFACT_ID"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
